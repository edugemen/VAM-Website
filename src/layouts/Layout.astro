---
interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es">
    <head>
        <meta charset="UTF-8" />
        <!-- Primary Meta Tags -->
        <title>VAM</title>
        <meta name="title" content="VAM" />
        <meta
            name="description"
            content="Página oficial de VAM Cerro del Viento"
        />

        <!-- Open Graph / Facebook -->
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://www.vamcv.es/" />
        <meta property="og:title" content="VAM" />
        <meta
            property="og:description"
            content="Página oficial de VAM Cerro del Viento"
        />
        <meta property="og:image" content="/meta.png" />

        <!-- Twitter -->
        <meta property="twitter:card" content="summary_large_image" />
        <meta property="twitter:url" content="https://www.vamcv.es/" />
        <meta property="twitter:title" content="VAM" />
        <meta
            property="twitter:description"
            content="Página oficial de VAM Cerro del Viento"
        />
        <meta property="twitter:image" content="/meta.png" />

        <!-- Meta Tags Generated with https://metatags.io -->
        <meta name="author" content="github.com/edugemen" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" href="/logo.png" />
        <meta name="generator" content={Astro.generator} />
    </head>
    <body>
        <slot />
    </body>
</html>
<style is:global>
    @import url("https://fonts.googleapis.com/css2?family=Noto+Sans:wght@400;500;700&display=swap");

    :root {
        --aquamarine-50-array: 0, 166, 138;
        --aquamarine-50: rgb(234, 255, 248);
        --aquamarine-100: rgb(204, 255, 237);
        --aquamarine-200: #8cfbda;
        --aquamarine-300: #60f5d2;
        --aquamarine-400: #22e5be;
        --aquamarine-500: #00cca8;
        --aquamarine-600: #00a68a;
        --aquamarine-700: #008573;
        --aquamarine-800: #00695b;
        --aquamarine-900: #00564d;
        --aquamarine-950: #00312d;
        --aquamarine-950-array: 0, 49, 45;

        --font-color: #000;
        --nav-bg-color: rgba(var(--aquamarine-50-array), 0.8);
        --primary-color: var(--aquamarine-600);
        --secondary-color: var(--aquamarine-700);
        --link-color: #1c75b9;
        --link-white-color: #fff;
        --bg-color: #f5f5f5;
        --bg-img: url("dia.jpg");
    }

    [data-theme="dark"] {
        --font-color: var(--aquamarine-50);
        --nav-bg-color: rgba(var(--aquamarine-950-array), 0.8);
        --primary-color: var(--aquamarine-800);
        --secondary-color: var(--aquamarine-950);
        --link-color: #0a86da;
        --link-white-color: #c1bfbd;
        --bg-color: #04090f;
        --bg-img: url("noche.jpg");
    }

    html {
        font-family: "Noto Sans", sans-serif;
        color: var(--font-color);
        background: var(--bg-color);
    }

    body {
        position: relative;
        margin: 0;
        padding: 0;
    }

    @media screen and (min-width: 768px) {
        html {
            background-position: 0 -600px;
        }
    }

    @media screen and (min-width: 1024px) {
        html {
            background-position: 0 -600px;
        }
    }
</style>

<script>
    function detectColorScheme() {
        var theme = "light"; //default to light

        //local storage is used to override OS theme settings
        if (localStorage.getItem("theme")) {
            if (localStorage.getItem("theme") == "dark") {
                var theme = "dark";
            }
        } else if (!window.matchMedia) {
            //matchMedia method not supported
            return false;
        } else if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            //OS theme setting detected as dark
            var theme = "dark";
        }

        //dark theme preferred, set document with a `data-theme` attribute
        if (theme == "dark") {
            document.documentElement.setAttribute("data-theme", "dark");
        }
    }
    detectColorScheme();
</script>
